DCheckUpdate.NoCheckUpdate.Problem        = 无法检查更新。
DCheckUpdate.NoFindRedirect.message       = 找不到来自\n{0}的重定向。
DCheckUpdate.Non200Response.message       = 在检索\n{1} 时，从服务器接收到非200响应 ({0})。
DCheckUpdate.ProblemCheckingUpdate.Title  = 检查更新时出现问题
DCheckUpdate.ProxySettingsIncorrect.Cause = 互联网代理设置不正确。请在首选项中检查。
DCheckUpdate.Title                        = 检查更新
DCheckUpdate.UpdateHostUnavailable.Cause  = 更新主机当前不可用。
DCheckUpdate.jbCancel.text                = 取消
DCheckUpdate.jlCheckUpdate.text           = 正在检查更新...

DCompareCertificates.KeyUsage     = 密钥用法：{0}
DCompareCertificates.Title        = 比较证书 ''{0}'' 与 ''{1}''
DCompareCertificates.jbOK.text    = 确定
DCompareCertificates.jlMatch.text = 匹配：{0}%

DExamineSsl.NoKeyStoreSelected.message        = 未选择密钥库。
DExamineSsl.NoPasswordSetForKeyStore.message  = 如果未设置密码，则无法使用密钥库。
DExamineSsl.PositiveIntegerSslPortReq.message = TLS 端口必须是正整数。
DExamineSsl.SslHostReq.message                = 需要 TLS 主机。
DExamineSsl.SslPortReq.message                = 需要 TLS 端口。
DExamineSsl.Title                             = 检查 TLS
DExamineSsl.jbCancel.text                     = 取消
DExamineSsl.jbLoadKeystore.tooltip            = 从磁盘打开现有密钥库
DExamineSsl.jbOK.text                         = 确定
DExamineSsl.jcbKeyStore.tooltip               = 选择用于 TLS 客户端身份验证的密钥库
DExamineSsl.jlClientAuth.text                 = 客户端身份验证
DExamineSsl.jlConnSettings.text               = 连接设置
DExamineSsl.jlEnableClientAuth.text           = 启用客户端身份验证
DExamineSsl.jlKeyStore.text                   = 密钥库：
DExamineSsl.jlSslHost.text                    = TLS 主机：
DExamineSsl.jlSslPort.text                    = TLS 端口：
DExamineSsl.jtfSslHost.tooltip                = 要检查的 TLS 连接的主机名
DExamineSsl.jtfSslPort.text                   = 443
DExamineSsl.jtfSslPort.tooltip                = 要检查的 TLS 连接的端口号

DExaminingSsl.NoExamineSsl.Problem         = 无法检查 ''{0}:{1}'' 的 TLS 证书。
DExaminingSsl.ProblemExaminingSsl.Title    = 检查 TLS 时出现问题
DExaminingSsl.ProxySettingsIncorrect.Cause = 互联网代理设置不正确。请在首选项中检查。
DExaminingSsl.SslHostPortIncorrect.Cause   = TLS 主机或端口不正确。
DExaminingSsl.SslHostUnavailable.Cause     = TLS 主机当前不可用。
DExaminingSsl.Title                        = 正在检查 TLS
DExaminingSsl.jbCancel.text                = 取消
DExaminingSsl.jlExaminingSsl.text          = 正在检查 TLS...

DFindKeyStoreEntry.NotEmpty.message = 输入有效的条目名称
DFindKeyStoreEntry.Title            = 查找密钥库条目
DFindKeyStoreEntry.jbCancel.text    = 取消
DFindKeyStoreEntry.jbOK.text        = 确定
DFindKeyStoreEntry.jlEntryName.text = 条目名称：

DGenerateCsr.ChallengeRequiredForSpkac.message = SPKAC 需要挑战。
DGenerateCsr.ChooseCsrFile.Title               = 选择 CSR 文件
DGenerateCsr.ChooseCsrFile.button              = 选择
DGenerateCsr.CsrFileRequired.message           = 需要 CSR 文件的路径。
DGenerateCsr.InvalidDN.message                 = 无效名称 (DN)
DGenerateCsr.OverWriteCsrFile.message          = CSR 文件 ''{0}'' 已存在。\n您想要覆盖它吗？
DGenerateCsr.Title                             = 生成 CSR
DGenerateCsr.jbBrowse.mnemonic                 = B
DGenerateCsr.jbBrowse.text                     = 浏览
DGenerateCsr.jbBrowse.tooltip                  = 浏览 CSR 文件
DGenerateCsr.jbCancel.text                     = 取消
DGenerateCsr.jbOK.text                         = 确定
DGenerateCsr.jcbExtensions.text                = 将证书扩展添加到请求中
DGenerateCsr.jcbExtensions.tooltip             = 从当前证书添加扩展作为 PKCS#10 请求的 extensionRequest 属性
DGenerateCsr.jcbSignatureAlgorithm.tooltip     = 用于签署 CSR 的签名算法
DGenerateCsr.jdnName.title                     = 区别名称 (DN)
DGenerateCsr.jdnName.tooltip                   = 证书名称 (DN)
DGenerateCsr.jlChallenge.text                  = 挑战：
DGenerateCsr.jlCsrFile.text                    = CSR 文件：
DGenerateCsr.jlExtensions.text                 = 扩展：
DGenerateCsr.jlFormat.text                     = 格式：
DGenerateCsr.jlName.text                       = 区别名称 (DN)
DGenerateCsr.jlSignatureAlgorithm.text         = 签名算法：
DGenerateCsr.jlUnstructuredName.text           = 可选公司名称：
DGenerateCsr.jrbPkcs10.mnemonic                = P
DGenerateCsr.jrbPkcs10.text                    = PKCS #10
DGenerateCsr.jrbPkcs10.tooltip                 = 最常用的格式，RSA 的 CSR 格式
DGenerateCsr.jrbSpkac.mnemonic                 = S
DGenerateCsr.jrbSpkac.text                     = SPKAC
DGenerateCsr.jrbSpkac.tooltip                  = 签名公钥和挑战 (SPKAC)，Netscape 的 CSR 格式
DGenerateCsr.jtfChallenge.tooltip              = <html>请求证书撤销的挑战口令。<br>PKCS #10 可选，SPKAC 必须</html>
DGenerateCsr.jtfCsrFile.tooltip                = 生成 CSR 的文件
DGenerateCsr.jtfUnstructuredName.tooltip       = 可选公司名称，以兼容 OpenSSL（PKCS#10 属性 "unstructuredName"）

DGenerateDHParameters.Title                = 生成 Diffie-Hellman 参数
DGenerateDHParameters.jbCancel.text        = 取消
DGenerateDHParameters.jbOK.text            = 确定
DGenerateDHParameters.jcbDHKeySize.tooltip = 设置密钥大小（位）
DGenerateDHParameters.jlDHKeySize.text     = 密钥大小：
DGenerateDHParameters.jpContent.text       = 密钥大小选择
DGenerateDHParameters.jtAreaFooter.text    = 对于大于 2048 位的密钥大小，请使用 OpenSSL。示例：\nopenssl dhparam -out dhparam.pem 2048


DGenerateKeyPair.Title                              = 生成密钥对
DGenerateKeyPair.jbCancel.text                      = 取消
DGenerateKeyPair.jbOK.text                          = 确定
DGenerateKeyPair.jcbECCurve.tooltip                 = 命名曲线（定义椭圆曲线的标准化域参数）
DGenerateKeyPair.jcbECCurveSet.tooltip              = 在标准文档中定义的命名曲线集合
DGenerateKeyPair.jlECCurve.text                     = 命名曲线：
DGenerateKeyPair.jlECCurve.tooltip                  = 命名曲线（定义椭圆曲线的标准化域参数）
DGenerateKeyPair.jlECCurveSet.text                  = 集合：
DGenerateKeyPair.jlECCurveSet.tooltip               = 在标准文档中定义的命名曲线集合
DGenerateKeyPair.jlKeySize.text                     = 密钥大小：
DGenerateKeyPair.jpContent.text                     = 算法选择
DGenerateKeyPair.jrbDSA.mnemonic                    = D
DGenerateKeyPair.jrbDSA.text                        = DSA
DGenerateKeyPair.jrbDSA.tooltip                     = DSA（数字签名算法）密钥对
DGenerateKeyPair.jrbEC.mnemonic                     = E
DGenerateKeyPair.jrbEC.na.tooltip                   = EC 仅在 Java 7 或更高版本，或在密钥库类型 BKS、UBER 或 PKCS12 中可用
DGenerateKeyPair.jrbEC.text                         = EC
DGenerateKeyPair.jrbEC.tooltip                      = ECC（椭圆曲线密码学）密钥对
DGenerateKeyPair.jrbRSA.mnemonic                    = R
DGenerateKeyPair.jrbRSA.text                        = RSA
DGenerateKeyPair.jrbRSA.tooltip                     = RSA（Rivest、Shamir、Adleman）密钥对
DGenerateKeyPair.jsKeySize.tooltip                  = 密钥大小（位）

DGenerateKeyPairCert.CritSANReq.message             = 如果主题 DN 为空，则证书必须包含标记为关键的 subjectAltName 扩展。
DGenerateKeyPairCert.NameValueReq.message           = 名称需要一个值。
DGenerateKeyPairCert.SerialNumberNonZero.message    = 序列号必须大于零。
DGenerateKeyPairCert.SerialNumberNotInteger.message = 序列号必须是整数。
DGenerateKeyPairCert.ValReqSerialNumber.message     = 序列号需要一个值。
DGenerateKeyPairCert.jbAddExtensions.mnemonic       = A
DGenerateKeyPairCert.jbAddExtensions.text           = 添加扩展
DGenerateKeyPairCert.jbAddExtensions.tooltip        = 将证书扩展添加到证书
DGenerateKeyPairCert.jbCancel.text                  = 取消
DGenerateKeyPairCert.jbOK.text                      = 确定
DGenerateKeyPairCert.jbTransferNameExt.mnemonic     = T
DGenerateKeyPairCert.jbTransferNameExt.text         = 转移名称和扩展
DGenerateKeyPairCert.jbTransferNameExt.tooltip      = 从证书转移名称和扩展
DGenerateKeyPairCert.jcbSignatureAlgorithm.tooltip  = 用于签署证书的签名算法
DGenerateKeyPairCert.jdnName.title                  = 名称
DGenerateKeyPairCert.jdnName.tooltip                = 证书名称 (DN)
DGenerateKeyPairCert.jdtValidityEnd.text            = 有效期结束
DGenerateKeyPairCert.jdtValidityEnd.tooltip         = 证书有效期结束
DGenerateKeyPairCert.jdtValidityStart.text          = 有效期开始
DGenerateKeyPairCert.jdtValidityStart.tooltip       = 证书有效期开始
DGenerateKeyPairCert.jlName.text                    = 名称：
DGenerateKeyPairCert.jlSerialNumber.text            = 序列号：
DGenerateKeyPairCert.jlSigAlg.text                  = 签名算法：
DGenerateKeyPairCert.jlValidityEnd.text             = 有效期结束：
DGenerateKeyPairCert.jlValidityPeriod.text          = 有效期：
DGenerateKeyPairCert.jlValidityStart.text           = 有效期开始：
DGenerateKeyPairCert.jlVersion.text                 = 版本：
DGenerateKeyPairCert.jrbVersion1.text               = 版本 1
DGenerateKeyPairCert.jrbVersion1.tooltip            = 版本 1 证书 - 不支持扩展
DGenerateKeyPairCert.jrbVersion3.text               = 版本 3
DGenerateKeyPairCert.jrbVersion3.tooltip            = 版本 3 证书 - 支持扩展
DGenerateKeyPairCert.jtfSerialNumber.tooltip        = 证书序列号
DGenerateKeyPairCert.jvpValidityPeriod.tooltip      = 证书有效期

DGenerateSecretKey.Title             = 生成秘密密钥
DGenerateSecretKey.jbCancel.text     = 取消
DGenerateSecretKey.jbOK.text         = 确定
DGenerateSecretKey.jcbKeyAlg.tooltip = 秘密密钥算法
DGenerateSecretKey.jlKeyAlg.text     = 算法：
DGenerateSecretKey.jlKeySize.text    = 密钥大小：
DGenerateSecretKey.jsKeySize.tooltip = 密钥大小（位）


DGeneratingDHParameters.Title                  = 生成 DH 参数
DGeneratingDHParameters.jbCancel.text          = 取消
DGeneratingDHParameters.jlGenDHParameters.text = 正在生成 DH 参数...

DGeneratingKeyPair.Title             = 生成密钥对
DGeneratingKeyPair.jbCancel.text     = 取消
DGeneratingKeyPair.jlGenKeyPair.text = 正在生成密钥对...

DGetAlias.AliasReq.message = 必须提供别名。
DGetAlias.jbCancel.text    = 取消
DGetAlias.jbOK.text        = 确定
DGetAlias.jlAlias.text     = 输入别名：

DNewKeyStoreType.Title                      = 新密钥库类型
DNewKeyStoreType.jbCancel.text              = 取消
DNewKeyStoreType.jbOK.text                  = 确定
DNewKeyStoreType.jlKeyStoreType.text        = 选择新的密钥库类型：
DNewKeyStoreType.jrbBcfksKeyStore.mnemonic  = F
DNewKeyStoreType.jrbBcfksKeyStore.text      = BCFKS
DNewKeyStoreType.jrbBcfksKeyStore.tooltip   = Bouncy Castle FIPS 密钥库
DNewKeyStoreType.jrbBksKeyStore.mnemonic    = B
DNewKeyStoreType.jrbBksKeyStore.text        = BKS
DNewKeyStoreType.jrbBksKeyStore.tooltip     = Bouncy Castle 密钥库（Bouncy Castle 版本的 JKS）
DNewKeyStoreType.jrbBksV1KeyStore.mnemonic  = V
DNewKeyStoreType.jrbBksV1KeyStore.text      = BKS-V1
DNewKeyStoreType.jrbBksV1KeyStore.tooltip   = Bouncy Castle 密钥库（Bouncy Castle 版本的 JKS）版本 1
DNewKeyStoreType.jrbJceksKeyStore.mnemonic  = J
DNewKeyStoreType.jrbJceksKeyStore.text      = JCEKS
DNewKeyStoreType.jrbJceksKeyStore.tooltip   = Java 加密扩展密钥库（Oracle 的高级密钥库格式）
DNewKeyStoreType.jrbJksKeyStore.mnemonic    = K
DNewKeyStoreType.jrbJksKeyStore.text        = JKS
DNewKeyStoreType.jrbJksKeyStore.tooltip     = Java 密钥库（Oracle 的基本密钥库格式）
DNewKeyStoreType.jrbPkcs12KeyStore.mnemonic = P
DNewKeyStoreType.jrbPkcs12KeyStore.text     = PKCS #12
DNewKeyStoreType.jrbPkcs12KeyStore.tooltip  = 公钥密码学标准 #12 密钥库（RSA 的密钥库格式）
DNewKeyStoreType.jrbUberKeyStore.mnemonic   = U
DNewKeyStoreType.jrbUberKeyStore.text       = UBER
DNewKeyStoreType.jrbUberKeyStore.tooltip    = Bouncy Castle UBER 密钥库（更安全的 BKS 版本）

DOpenPkcs11KeyStore.32with64bit.Cause              = 64 位 PKCS#11 库无法在 32 位 JRE 中使用（反之亦然）。
DOpenPkcs11KeyStore.64bitBeforeJRE8.Cause          = 在 64 位 Java 7 运行时（及更早版本）中不支持 PKCS#11 提供程序。
DOpenPkcs11KeyStore.NotPkcs11Lib.Cause             = 选择的文件不是 PKCS#11 库。
DOpenPkcs11KeyStore.ProblemLoadingProvider.Problem = 无法用 ''{0}'' 初始化 PKCS#11 提供程序。
DOpenPkcs11KeyStore.ProblemLoadingProvider.Title   = 初始化 PKCS#11 提供程序时出错
DOpenPkcs11KeyStore.SelectLib.Title                = 选择 PKCS#11 库
DOpenPkcs11KeyStore.SelectLib.button               = 选择
DOpenPkcs11KeyStore.Title                          = 打开 PKCS#11 密钥库
DOpenPkcs11KeyStore.WrongConfiguration.Cause       = 配置错误。
DOpenPkcs11KeyStore.jbCancel.text                  = 取消
DOpenPkcs11KeyStore.jbOK.text                      = 确定
DOpenPkcs11KeyStore.jbP11LibraryBrowse.tooltip     = 浏览到本地 PKCS#11 库。
DOpenPkcs11KeyStore.jcbPkcs11Provider.tooltip      = 如果已通过 java.security 安装 SunPKCS11 提供程序，则所有实例在此列出。
DOpenPkcs11KeyStore.jlP11Library.text              = PKCS#11 库：
DOpenPkcs11KeyStore.jlSelectProvider.text          = 选择实例：
DOpenPkcs11KeyStore.jlSlotListIndex.text           = 插槽索引：
DOpenPkcs11KeyStore.jrbCreateNew.mnemonic          = C
DOpenPkcs11KeyStore.jrbCreateNew.text              = 注册新 PKCS#11 提供程序
DOpenPkcs11KeyStore.jrbUseExisting.mnemonic        = U
DOpenPkcs11KeyStore.jrbUseExisting.text            = 使用已安装的 PKCS#11 提供程序
DOpenPkcs11KeyStore.jspSlotListIndex.tooltip       = 插槽列表索引，0 表示列表中的第一个插槽。
DOpenPkcs11KeyStore.jtfP11Library.tooltip          = 本地 PKCS#11 库的路径。
DOpenPkcs11KeyStore.noLibSelected.message          = 您必须先选择一个 PKCS#11 库。
DOpenPkcs11KeyStore.providerNotInstalled.message   = PKCS#11 提供程序未安装！

DProperties.NoGetProperties.exception.message      = 无法获取密钥库属性。
DProperties.Title                                  = ''{0}'' 的属性
DProperties.jbCopy.mnemonic                        = C
DProperties.jbCopy.text                            = 复制
DProperties.jbCopy.tooltip                         = 将属性复制到剪贴板
DProperties.jbOK.text                              = 确定
DProperties.properties.Algorithm                   = 算法：{0}
DProperties.properties.Certificates                = 证书
DProperties.properties.Encoded                     = 编码：{0}
DProperties.properties.File                        = 文件：{0}
DProperties.properties.Format                      = 格式：{0}
DProperties.properties.Issuer                      = 颁发者：{0}
DProperties.properties.KeyPairs                    = 密钥对
DProperties.properties.KeySize                     = 密钥大小：{0} 位
DProperties.properties.Keys                        = 密钥
DProperties.properties.LastModified                = 最后修改时间：{0}
DProperties.properties.Locked                      = 已锁定 - 解锁以获取属性
DProperties.properties.Md5Fingerprint              = MD5 指纹：{0}
DProperties.properties.None                        = 无
DProperties.properties.PrivateKey                  = 私钥
DProperties.properties.Provider                    = 提供者：{0}
DProperties.properties.PublicKey                   = 公钥
DProperties.properties.Root                        = ''{0}'' 的属性
DProperties.properties.SecretKey                   = 秘密密钥
DProperties.properties.SerialNumber                = 序列号：{0}
DProperties.properties.Sha1Fingerprint             = SHA-1 指纹：{0}
DProperties.properties.SignatureAlgorithm          = 签名算法：{0}
DProperties.properties.Subject                     = 主题：{0}
DProperties.properties.TrustedCertificates         = 受信任的证书
DProperties.properties.Type                        = 类型：{0}
DProperties.properties.ValidFrom                   = 有效开始：{0}
DProperties.properties.ValidUntil                  = 有效结束：{0}
DProperties.properties.Version                     = 版本：{0}
DProperties.properties.private.dsa.GeneratorG      = 生成器 G：{0}
DProperties.properties.private.dsa.PrimeModulusP   = 素数模 P：{0}
DProperties.properties.private.dsa.PrimeQ          = 素数 Q：{0}
DProperties.properties.private.dsa.SecretExponentX = 秘密指数 X：{0}
DProperties.properties.private.rsa.CrtCoefficient  = CRT 系数：{0}
DProperties.properties.private.rsa.Modulus         = 模数：{0}
DProperties.properties.private.rsa.PrimeExponentP  = 素数指数 P：{0}
DProperties.properties.private.rsa.PrimeExponentQ  = 素数指数 Q：{0}
DProperties.properties.private.rsa.PrimeP          = 素数 P：{0}
DProperties.properties.private.rsa.PrimeQ          = 素数 Q：{0}
DProperties.properties.private.rsa.PrivateExponent = 私有指数：{0}
DProperties.properties.private.rsa.PublicExponent  = 公共指数：{0}
DProperties.properties.public.dsa.GeneratorG       = 生成器 G：{0}
DProperties.properties.public.dsa.PrimeModulusP    = 素数模 P：{0}
DProperties.properties.public.dsa.PrimeQ           = 素数 Q：{0}
DProperties.properties.public.dsa.PublicKeyY       = 公钥 Y：{0}
DProperties.properties.public.rsa.Modulus          = 模数：{0}
DProperties.properties.public.rsa.PublicExponent   = 公共指数：{0}


DVerifyCertificate.ChooseCACertificatesKeyStore.Title = 选择 CA 证书密钥库
DVerifyCertificate.ChooseCRLFile.Title                = 选择 CRL 文件
DVerifyCertificate.ChooseCRLFile.button               = 选择
DVerifyCertificate.ReqOcspUrl.Title                   = 必须提供 OCSP URL 的值
DVerifyCertificate.Title                              = 验证证书 ''{0}''
DVerifyCertificate.jbBrowse.text                      = 浏览
DVerifyCertificate.jbCancel.text                      = 取消
DVerifyCertificate.jbLoadCrl.tooltip                  = 从磁盘打开 CRL
DVerifyCertificate.jbLoadKeystore.tooltip             = 从磁盘打开密钥库
DVerifyCertificate.jbOk.text                          = 确定
DVerifyCertificate.jcbKeyStore.tooltip                = 选择密钥库
DVerifyCertificate.jcbSelectKeyStore.text             = 使用备用 CA 密钥库来验证证书：
DVerifyCertificate.jlCacertFile.text                  = 密钥库：
DVerifyCertificate.jlCheckStatus.text                 = 使用以下方式验证证书链并检查撤销状态
DVerifyCertificate.jlKeyStore.text                    = 密钥库：
DVerifyCertificate.jrbChainCheck.text                 = 不检查撤销状态，仅验证证书链
DVerifyCertificate.jrbChainCheck.tooltip              = 验证链
DVerifyCertificate.jrbCrlCheckDistPoint.text          = CRL 分发点扩展
DVerifyCertificate.jrbCrlCheckDistPoint.tooltip       = 通过查找有效的 CRL 检查最终实体证书的有效性
DVerifyCertificate.jrbCrlCheckFile.text               = CRL 文件
DVerifyCertificate.jrbCrlCheckFile.tooltip            = 通过查找有效的 CRL 检查最终实体证书的有效性
DVerifyCertificate.jrbOcspAiaCheck.text               = 来自授权信息访问扩展的 OCSP
DVerifyCertificate.jrbOcspAiaCheck.tooltip            = 使用来自 AIA 扩展的 OCSP URL
DVerifyCertificate.jrbOcspUrlCheck.text               = 使用 URL 的 OCSP
DVerifyCertificate.jrbOcspUrlCheck.tooltip            = 在线证书状态协议
DVerifyCertificate.jtfCrlFile.tooltip                 = CRL 文件
DVerifyCertificate.jtfOcspUrl.tooltip                 = URL

DViewAsn1Dump.Certificate.Title = 证书 ASN.1 转储
DViewAsn1Dump.Crl.Title         = CRL ASN.1 转储
DViewAsn1Dump.Csr.Title         = PKCS#10 请求 ASN.1 转储
DViewAsn1Dump.Extension.Title   = 扩展 ASN.1 转储
DViewAsn1Dump.PrivateKey.Title  = 私钥 ASN.1 转储
DViewAsn1Dump.PublicKey.Title   = 公钥 ASN.1 转储
DViewAsn1Dump.jbCopy.mnemonic   = C
DViewAsn1Dump.jbCopy.text       = 复制
DViewAsn1Dump.jbCopy.tooltip    = 将 ASN.1 转储复制到剪贴板
DViewAsn1Dump.jbOK.text         = 确定


DViewAsymmetricKeyFields.PrivateKey.title                      = {0} 私钥字段
DViewAsymmetricKeyFields.PublicKey.title                       = {0} 公钥字段
DViewAsymmetricKeyFields.jbOK.text                             = 确定
DViewAsymmetricKeyFields.jlFieldValue.text                     = 字段值：
DViewAsymmetricKeyFields.jlFields.text                         = 字段：
DViewAsymmetricKeyFields.jltFields.PrivDsaGeneratorG.text      = 生成器 G
DViewAsymmetricKeyFields.jltFields.PrivDsaPrimeModulusP.text   = 素数模 P
DViewAsymmetricKeyFields.jltFields.PrivDsaPrimeQ.text          = 素数 Q
DViewAsymmetricKeyFields.jltFields.PrivDsaSecretExponentX.text = 秘密指数 X
DViewAsymmetricKeyFields.jltFields.PrivEcPrivateKey.text       = 私钥
DViewAsymmetricKeyFields.jltFields.PrivEdPrivateKey.text       = 私钥
DViewAsymmetricKeyFields.jltFields.PrivRsaCrtCoefficient.text  = CRT 系数
DViewAsymmetricKeyFields.jltFields.PrivRsaModulus.text         = 模数
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeExponentP.text  = 素数指数 P
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeExponentQ.text  = 素数指数 Q
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeP.text          = 素数 P
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeQ.text          = 素数 Q
DViewAsymmetricKeyFields.jltFields.PrivRsaPrivateExponent.text = 私有指数
DViewAsymmetricKeyFields.jltFields.PrivRsaPublicExponent.text  = 公有指数
DViewAsymmetricKeyFields.jltFields.PubDsaGeneratorG.text       = 生成器 G
DViewAsymmetricKeyFields.jltFields.PubDsaPrimeModulusP.text    = 素数模 P
DViewAsymmetricKeyFields.jltFields.PubDsaPrimeQ.text           = 素数 Q
DViewAsymmetricKeyFields.jltFields.PubDsaPublicKeyY.text       = 公钥 Y
DViewAsymmetricKeyFields.jltFields.PubEcAffineX.text           = 仿射 X
DViewAsymmetricKeyFields.jltFields.PubEcAffineY.text           = 仿射 Y
DViewAsymmetricKeyFields.jltFields.PubEdKey.text               = 公钥
DViewAsymmetricKeyFields.jltFields.PubRsaModulus.text          = 模数
DViewAsymmetricKeyFields.jltFields.PubRsaPublicExponent.text   = 公有指数
DViewAsymmetricKeyFields.jltFields.tooltip                     = 显示密钥的字段
DViewAsymmetricKeyFields.jtaFieldValue.tooltip                 = 显示选定密钥字段的值

DViewCertificate.Extensions.Title                   = 证书扩展
DViewCertificate.Issuer.Title                       = 颁发者
DViewCertificate.NoGetEncodedCert.exception.message = 无法获取证书的编码形式。
DViewCertificate.Pem.Title                          = 证书 PEM
DViewCertificate.PubKeyDetails.Title                = 公钥详细信息
DViewCertificate.Subject.Title                      = 主题
DViewCertificate.jbAsn1.mnemonic                    = A
DViewCertificate.jbAsn1.text                        = ASN.1
DViewCertificate.jbAsn1.tooltip                     = 显示证书的 ASN.1 转储
DViewCertificate.jbExport.mnemonic                  = X
DViewCertificate.jbExtensions.mnemonic              = E
DViewCertificate.jbExtensions.text                  = 扩展
DViewCertificate.jbExtensions.tooltip               = 显示证书的扩展
DViewCertificate.jbImport.mnemonic                  = I
DViewCertificate.jbImportExport.export.text         = 导出
DViewCertificate.jbImportExport.export.tooltip      = 导出证书到文件
DViewCertificate.jbImportExport.import.text         = 导入
DViewCertificate.jbImportExport.import.tooltip      = 将证书导入密钥库
DViewCertificate.jbOK.text                          = 确定
DViewCertificate.jbPem.mnemonic                     = P
DViewCertificate.jbPem.text                         = PEM
DViewCertificate.jbPem.tooltip                      = 将证书显示为 PEM
DViewCertificate.jbVerify.mnemonic                  = V
DViewCertificate.jbVerify.text                      = 验证
DViewCertificate.jbVerify.tooltip                   = 验证证书
DViewCertificate.jbViewPublicKeyDetails.tooltip     = 显示公钥的详细信息
DViewCertificate.jdnIssuer.tooltip                  = 证书颁发者的 Distinguished Name
DViewCertificate.jdnSubject.tooltip                 = 证书主题的 Distinguished Name
DViewCertificate.jlFingerprint.text                 = 指纹：
DViewCertificate.jlHierarchy.text                   = 证书层级：
DViewCertificate.jlIssuer.text                      = 颁发者：
DViewCertificate.jlPublicKey.text                   = 公钥：
DViewCertificate.jlSerialNumberDec.text             = 序列号（十进制）：
DViewCertificate.jlSerialNumberHex.text             = 序列号（十六进制）：
DViewCertificate.jlSignatureAlgorithm.text          = 签名算法：
DViewCertificate.jlSubject.text                     = 主题：
DViewCertificate.jlValidFrom.text                   = 有效期开始：
DViewCertificate.jlValidUntil.text                  = 有效期结束：
DViewCertificate.jlVersion.text                     = 版本：
DViewCertificate.jtfPublicKey.text                  = {0} {1} 位
DViewCertificate.jtfPublicKey.tooltip               = 证书的公钥算法
DViewCertificate.jtfSerialNumberDec.tooltip         = 证书颁发者分配的序列号（十进制格式）
DViewCertificate.jtfSerialNumberHex.tooltip         = 证书颁发者分配的序列号（十六进制格式）
DViewCertificate.jtfSignatureAlgorithm.tooltip      = 用于签署证书的签名算法
DViewCertificate.jtfValidFrom.notyetvalid.text      = {0} (尚未生效)
DViewCertificate.jtfValidFrom.tooltip               = 证书从此日期起有效
DViewCertificate.jtfValidUntil.expired.text         = {0} (已过期)
DViewCertificate.jtfValidUntil.tooltip              = 证书在此日期之前有效
DViewCertificate.jtfVersion.tooltip                 = 证书的版本号


DViewCrl.EntryExtensions.Title              = 被撤销证书的扩展
DViewCrl.Extensions.Title                   = CRL 扩展
DViewCrl.Issuer.Title                       = 颁发者
DViewCrl.jbCrlAsn1.mnemonic                 = A
DViewCrl.jbCrlAsn1.text                     = ASN.1
DViewCrl.jbCrlAsn1.tooltip                  = 显示 CRL 的 ASN.1 转储
DViewCrl.jbCrlEntryExtensions.mnemonic      = x
DViewCrl.jbCrlEntryExtensions.text          = 扩展
DViewCrl.jbCrlEntryExtensions.tooltip       = 显示被撤销证书的扩展
DViewCrl.jbCrlExtensions.mnemonic           = E
DViewCrl.jbCrlExtensions.text               = 扩展
DViewCrl.jbCrlExtensions.tooltip            = 显示 CRL 的扩展
DViewCrl.jbOK.text                          = 确定
DViewCrl.jdnIssuer.tooltip                  = CRL 颁发者的 Distinguished Name
DViewCrl.jlEffectiveDate.text               = 生效日期：
DViewCrl.jlIssuer.text                      = 颁发者：
DViewCrl.jlNextUpdate.text                  = 下次更新：
DViewCrl.jlRevokedCerts.text                = {0,choice,0#空 CRL（无条目）。|1#一个被撤销的证书：|1<被撤销证书 ({0,number,integer} 条目)：}
DViewCrl.jlSignatureAlgorithm.text          = 签名算法：
DViewCrl.jlVersion.text                     = 版本：
DViewCrl.jtfEffectiveDate.noteffective.text = {0} （尚未生效）
DViewCrl.jtfEffectiveDate.tooltip           = CRL 从此日期起生效
DViewCrl.jtfNextUpdate.none.text            = 无
DViewCrl.jtfNextUpdate.tooltip              = 下次 CRL 更新的日期
DViewCrl.jtfNextUpdate.updateavailable.text = {0} （更新可用）
DViewCrl.jtfSignatureAlgorithm.tooltip      = 用于签署 CRL 的签名算法
DViewCrl.jtfVersion.tooltip                 = CRL 的版本号

DViewCsr.NoGetPublicKey.message         = 无法获取 CSR 的公钥。
DViewCsr.Pem.Title                      = 以 PEM 格式查看 PKCS#10 CSR
DViewCsr.PubKeyDetails.Title            = 公钥详细信息
DViewCsr.SaveCaReply.Title              = 选择 CA 回复文件
DViewCsr.SaveCaReply.button             = 选择
DViewCsr.Subject.Title                  = 主题
DViewCsr.Title                          = 签署 CSR
DViewCsr.jbAsn1.mnemonic                = A
DViewCsr.jbAsn1.text                    = ASN.1
DViewCsr.jbAsn1.tooltip                 = 显示 CSR 的 ASN.1 转储
DViewCsr.jbExtensions.mnemonic          = E
DViewCsr.jbExtensions.text              = 扩展
DViewCsr.jbExtensions.tooltip           = 显示 CSR 的扩展
DViewCsr.jbVerify.mnemonic              = V
DViewCsr.jbVerify.text                  = 验证
DViewCsr.jbVerify.tooltip               = 验证 CSR 的签名
DViewCsr.jbOK.text                      = 确定
DViewCsr.jbPem.mnemonic                 = P
DViewCsr.jbPem.text                     = PEM
DViewCsr.jbPem.tooltip                  = 以 PEM 格式显示 CSR
DViewCsr.jbViewPublicKeyDetails.tooltip = 显示公钥的详细信息
DViewCsr.jdnSubject.tooltip             = CSR 主题的 Distinguished Name
DViewCsr.jlChallenge.text               = 挑战：
DViewCsr.jlFormat.text                  = 格式：
DViewCsr.jlPublicKey.text               = 公钥：
DViewCsr.jlSignatureAlgorithm.text      = 签名算法：
DViewCsr.jlSubject.text                 = 主题：
DViewCsr.jlUnstructuredName.text        = 非结构化名称：
DViewCsr.jtfChallenge.tooltip           = <html>CSR 的挑战密码短语。<br>用于请求证书撤销</html>
DViewCsr.jtfFormat.Pkcs10.text          = PKCS #10
DViewCsr.jtfFormat.Spkac.text           = SPKAC
DViewCsr.jtfFormat.tooltip              = CSR 的格式（PKCS #10 或 SPKAC）
DViewCsr.jtfPublicKey.text              = {0} {1} 位
DViewCsr.jtfPublicKey.tooltip           = CSR 的公钥算法
DViewCsr.jtfSignatureAlgorithm.tooltip  = 用于签署 CSR 的签名算法
DViewCsr.jtfUnstructuredName.tooltip    = 兼容 OpenSSL 的可选公司名称（PKCS#10 属性 "unstructuredName"）
DViewCsr.Verify.title                   = 签名验证结果
DViewCsr.VerifyOK.message               = 签名有效
DViewCsr.NoVerify.message               = 签名无效


DViewDHParameters.ChooseExportFile.button     = 选择
DViewDHParameters.ExportPem.Title             = 导出 PEM
DViewDHParameters.ExportPemSuccessful.message = PEM 导出成功。
DViewDHParameters.OverWriteFile.message       = 文件 ''{0}'' 已存在。\n您要覆盖它吗？
DViewDHParameters.jbCopy.mnemonic             = C
DViewDHParameters.jbCopy.text                 = 复制
DViewDHParameters.jbCopy.tooltip              = 将 PEM 数据复制到剪贴板
DViewDHParameters.jbExport.export.text        = 导出
DViewDHParameters.jbExport.export.tooltip     = 导出 PEM
DViewDHParameters.jbExport.mnemonic           = E
DViewDHParameters.jbOK.text                   = 确定
DViewDHParameters.jtAreaPem.mnemonic          = t
DViewDHParameters.jtAreaPem.tooltip           = PEM 格式的 DH 参数

DViewJwt.Title              = 查看 JWT
DViewJwt.jbCopy.mnemonic    = C
DViewJwt.jbCopy.text        = 复制
DViewJwt.jbCopy.tooltip     = 将 JWT 复制到剪贴板
DViewJwt.jbOK.text          = 确定
DViewJwt.jlEncoded.text     = 编码：
DViewJwt.jlHeader.text      = 头部：
DViewJwt.jlPayload.text     = 载荷：
DViewJwt.jtaEncoded.tooltip  = JSON Web Token
DViewJwt.jtaHeader.tooltip   = JWT 头部
DViewJwt.jtaPayload.tooltip  = JWT 载荷
DViewJwt.jlPublicKey.text    = 公钥：
DViewJwt.jtaPublicKey.tooltip = 公钥
DViewJwt.Verify.Title        = 验证签名
DViewJwt.jbVerify.text       = 验证
DViewJwt.jbVerify.tooltip    = 验证签名
DViewJwt.InvalidPublicKey.message = 公钥无效
DViewJwt.SignatureVerified.message = 签名已验证
DViewJwt.InvalidSignature.message = 签名无效

DViewKeyPair.ViewCertificateDetails.Title  = 密钥对的证书详细信息
DViewKeyPair.ViewPrivateKeyDetails.Title   = 密钥对的私钥详细信息
DViewKeyPair.jbCertificateDetails.mnemonic = C
DViewKeyPair.jbCertificateDetails.text     = 证书详细信息
DViewKeyPair.jbCertificateDetails.tooltip  = 显示密钥对的证书详细信息
DViewKeyPair.jbImport.mnemonic             = I
DViewKeyPair.jbOK.text                     = 确定
DViewKeyPair.jbPrivateKeyDetails.mnemonic  = P
DViewKeyPair.jbPrivateKeyDetails.text      = 私钥详细信息
DViewKeyPair.jbPrivateKeyDetails.tooltip   = 显示密钥对的私钥详细信息


DViewPem.ChooseExportFile.Title                 = 选择 PEM 导出文件
DViewPem.ChooseExportFile.button                = 选择
DViewPem.ExportPem.Title                        = 导出 PEM
DViewPem.ExportPemCertificateSuccessful.message = PEM 导出成功。
DViewPem.NoWriteFile.message                    = 无法写入文件 ''{0}''。
DViewPem.OverWriteFile.message                  = 文件 ''{0}'' 已存在。\n您要覆盖它吗？
DViewPem.jbCopy.mnemonic                        = C
DViewPem.jbCopy.text                            = 复制
DViewPem.jbCopy.tooltip                         = 将 PEM 数据复制到剪贴板
DViewPem.jbExport.mnemonic                      = E
DViewPem.jbExport.text                          = 导出
DViewPem.jbExport.tooltip                       = 将 PEM 数据 CSR 导出到文件
DViewPem.jbOK.text                              = 确定

DViewPrivateKey.Pem.Title            = PKCS#8 PEM 格式的私钥
DViewPrivateKey.jbAsn1.mnemonic      = A
DViewPrivateKey.jbAsn1.text          = ASN.1
DViewPrivateKey.jbAsn1.tooltip       = 显示私钥的 ASN.1 转储
DViewPrivateKey.jbExport.mnemonic    = X
DViewPrivateKey.jbExport.text        = 导出
DViewPrivateKey.jbExport.tooltip     = 将私钥导出到文件
DViewPrivateKey.jbFields.mnemonic    = F
DViewPrivateKey.jbFields.text        = 字段
DViewPrivateKey.jbFields.tooltip     = 显示私钥的字段
DViewPrivateKey.jbOK.text            = 确定
DViewPrivateKey.jbPem.mnemonic       = E
DViewPrivateKey.jbPem.text           = PEM
DViewPrivateKey.jbPem.tooltip        = 以 PEM 格式显示私钥
DViewPrivateKey.jlAlgorithm.text     = 算法：
DViewPrivateKey.jlEncoded.text       = 编码：
DViewPrivateKey.jlFormat.text        = 格式：
DViewPrivateKey.jlKeySize.text       = 密钥大小：
DViewPrivateKey.jtfAlgorithm.tooltip = 私钥的算法
DViewPrivateKey.jtfEncoded.tooltip   = 私钥的编码形式
DViewPrivateKey.jtfFormat.tooltip    = 私钥的编码格式
DViewPrivateKey.jtfKeySize.text      = {0} 位
DViewPrivateKey.jtfKeySize.tooltip   = 私钥的大小

DViewPublicKey.Pem.Title            = PEM 格式的公钥
DViewPublicKey.jbAsn1.mnemonic      = A
DViewPublicKey.jbAsn1.text          = ASN.1
DViewPublicKey.jbAsn1.tooltip       = 显示公钥的 ASN.1 转储
DViewPublicKey.jbFields.mnemonic    = F
DViewPublicKey.jbFields.text        = 字段
DViewPublicKey.jbFields.tooltip     = 显示公钥的字段
DViewPublicKey.jbOK.text            = 确定
DViewPublicKey.jbPem.mnemonic       = E
DViewPublicKey.jbPem.text           = PEM
DViewPublicKey.jbPem.tooltip        = 以 PEM 格式显示公钥
DViewPublicKey.jlAlgorithm.text     = 算法：
DViewPublicKey.jlEncoded.text       = 编码：
DViewPublicKey.jlFormat.text        = 格式：
DViewPublicKey.jlKeySize.text       = 密钥大小：
DViewPublicKey.jtfAlgorithm.tooltip = 公钥的算法
DViewPublicKey.jtfEncoded.tooltip   = 公钥的编码形式
DViewPublicKey.jtfFormat.tooltip    = 公钥的编码格式
DViewPublicKey.jtfKeySize.text      = {0} 位
DViewPublicKey.jtfKeySize.tooltip   = 公钥的大小

DViewSecretKey.NotAValidHexString.message = 不是有效的十六进制字符串。
DViewSecretKey.NotAValidKey.message       = 不是有效的密钥。
DViewSecretKey.jbCancel.text              = 取消
DViewSecretKey.jbOK.text                  = 确定
DViewSecretKey.jlAlgorithm.text           = 算法：
DViewSecretKey.jlEncoded.text             = 编码：
DViewSecretKey.jlFormat.text              = 格式：
DViewSecretKey.jlKeySize.text             = 密钥大小：
DViewSecretKey.jtfAlgorithm.tooltip       = 秘密密钥的算法
DViewSecretKey.jtfEncoded.tooltip         = 秘密密钥的编码形式（十六进制格式，可编辑）
DViewSecretKey.jtfFormat.tooltip          = 秘密密钥的编码格式
DViewSecretKey.jtfKeySize.text            = {0} 位
DViewSecretKey.jtfKeySize.tooltip         = 秘密密钥的大小

PasswordCallbackHandler.Title = PIN 登录

RevokedCertsTableHeadRend.RevocationDateColumn.tooltip = 被撤销证书的撤销日期/时间
RevokedCertsTableHeadRend.SerialNumberColumn.tooltip   = 被撤销证书的序列号

RevokedCertsTableModel.RevocationDateColumn = 撤销日期
RevokedCertsTableModel.SerialNumberColumn   = 序列号
